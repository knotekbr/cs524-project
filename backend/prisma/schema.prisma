// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  email            String         @unique
  saltedPassword   String
  nickname         String
  role             UserRole       @default(user)
  joined           DateTime       @default(now())
  createdGames     Game[]
  games            GamePlayer[]
}

model Game {
  id               Int            @id @default(autoincrement())
  createdBy        User           @relation(fields: [createdById], references: [id])
  createdById      Int
  players          GamePlayer[]
  events           GameEvent[]
}

model GameEvent {
  id               Int            @id @default(autoincrement())
  game             Game           @relation(fields: [gameId], references: [id])
  gameId           Int
  userId           Int?
  associatedPlayer GamePlayer?    @relation(fields: [gameId, userId], references: [gameId, userId])
  timestamp        DateTime       @default(now())
  eventType        GameEventType
  eventDetails     String?
}

model GamePlayer {
  user             User           @relation(fields: [userId], references: [id])
  userId           Int
  game             Game           @relation(fields: [gameId], references: [id])
  gameId           Int
  events           GameEvent[]

  @@id([userId, gameId])
}

model AnswerCategory {
  id               Int            @id @default(autoincrement())
  categoryName     String
  answers          AnswerPrompt[]
}

model AnswerPrompt {
  id               Int            @id @default(autoincrement())
  difficulty       Int
  prompt           String
  category         AnswerCategory @relation(fields: [categoryId], references: [id])
  categoryId       Int
  correctResponse  String
  otherResponses   String[]
}

enum UserRole {
  user
  admin
}

enum GameEventType {
  game_created
  game_started
  game_paused
  game_restarted
  game_ended
  player_joined
  player_left
  answer_chosen
  response_chosen
  scores_updated
}